user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

# Setup HTTPS access
server {
#   listen 443 ssl;
    listen 80
  # Add your domain here. We've added "my.dspace.edu" as an example
#   server_name my.dspace.edu;
 
  # Add your SSL certificate/key path here
  # NOTE: For LetsEncrypt, the certificate should be the full certificate chain file
  # These SSL settings are identical to those for the backend installation (see above)
  # If you already have the backend running HTTPS, just add the new Proxy settings below.

#   ssl_certificate my.dspace.edu.crt (or PEM);
#   ssl_certificate_key my.dspace.edu.key;
 
  # Proxy all HTTPS requests to "/server" from NGinx to Tomcat on port 8080
  # These Proxy settings are for the backend. They are described in the backend installation (see above)

#   location /server {
#     proxy_set_header X-Forwarded-Proto https;
#     proxy_set_header X-Forwarded-Host $host;
#     proxy_pass http://localhost:8080/server;
#   }
 
  # [NEW FOR UI:] Proxy all HTTPS requests from NGinx to PM2 on localhost, port 4000
  # NOTE that this proxy URL must match the "ui" settings in your config.prod.yml
  # (In this example: https://my.dspace.edu/ will display the User Interface)
  location / {
    # proxy_set_header X-Forwarded-Proto https;
    # proxy_set_header X-Forwarded-Host $host;
    proxy_pass http://localhost:4000/;
  }
}